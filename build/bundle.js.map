{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/d3-array/src/max.js","../../node_modules/d3-array/src/min.js","../../node_modules/d3-dsv/src/dsv.js","../../node_modules/d3-dsv/src/csv.js","../../node_modules/d3-dsv/src/autoType.js","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/motion/index.mjs","../../src/HexMap.svelte","../../src/App.svelte","../../src/config.js","../../src/hexjson.js","../../src/utils.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nconst fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { writable } from '../store/index.mjs';\nimport { now, loop, assign } from '../internal/index.mjs';\nimport { linear } from '../easing/index.mjs';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value) {\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        }\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled) {\n                    task = null;\n                }\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","<script>\n\timport { createEventDispatcher, onMount } from 'svelte';\n\tconst dispatch = createEventDispatcher();\n\timport { tweened } from 'svelte/motion';\n\timport { cubicOut } from 'svelte/easing';\n\t\n\texport let data;\n\texport let width = 100;\n\texport let height = 100;\n\texport let selected = null;\n\t\n\tlet el = {};\n\tlet zoomfactor = tweened(1, {\n\t\tduration: 400,\n\t\teasing: cubicOut\n\t});\n\t\n\tfunction makePoints(vertices) {\n\t\tlet points = [];\n\t\tvertices.forEach(d => points.push(d.x + ',' + d.y));\n\t\treturn points.join(' ');\n\t}\n\t\n\tfunction onClick(e, d) {\n\t\tif (selected.adj.includes(d.key) && !['wrong','right'].includes(d.status)) {\n\t\t\tdispatch('select', {\n\t\t\t\tcode: d.key,\n\t\t\t\tobj: d,\n\t\t\t\tevent: e\n\t\t\t});\n\t\t}\n\t}\n\t\n\tonMount(async () => {\n\t\treCenter(selected);\n\t});\n\t\n\tfunction reCenter(selected) {\n\t\tif (el[selected.key]) {\n\t\t\tel[selected.key].scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"center\"});\n\t\t}\n\t}\n\t\n\t$: reCenter(selected);\n</script>\n\n<div class=\"control\">\n\t<button on:click={() => zoomfactor.set($zoomfactor * 1.5)}>+</button>\n\t<button on:click={() => zoomfactor.set($zoomfactor / 1.5)}>-</button>\n</div>\n\n<div class=\"map\">\n\t<svg viewBox=\"0 0 {width} {height}\" xmlns=\"http://www.w3.org/2000/svg\" style=\"width: {width * $zoomfactor}px;\">\n\t\t{#each data as d}\n\t\t<g on:click=\"{(e) => onClick(e, d)}\" bind:this={el[d.key]} class=\"{d.status}\" transform=\"translate({d.x} {d.y})\">\n\t\t\t<polygon class=\"hex\" points=\"{makePoints(d.vertices)}\"/>\n\t\t\t<text class=\"text\">{d.n.slice(0,1)}</text>\n\t\t</g>\n\t\t{/each}\n\t</svg>\n</div>\n\n<style>\n\t.hex {\n\t\tfill: yellow;\n\t\tstroke: orange;\n\t\tstroke-width: 3px;\n\t\ttransform: scale(0.85);\n\t}\n\t.text {\n\t\tfont-family: 'Orbitron', sans-serif;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t\ttext-anchor: middle;\n\t\tdominant-baseline: middle;\n\t\tpointer-events: none;\n\t}\n\t.selected > polygon, .right > polygon {\n\t\tfill: #0f0;\n\t\tstroke: green;\n\t}\n\t.wrong {\n\t\topacity: 0;\n\t}\n\t.next > polygon {\n\t\tfill: cyan;\n\t\tstroke: blue;\n\t}\n\t.dest > polygon {\n\t\tfill: white;\n\t\tstroke: grey;\n\t}\n\t.adjacent {\n\t\tanimation: blink 1s linear infinite;\n\t\tcursor: pointer;\n\t}\n\t.map {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: scroll;\n\t}\n\t.control {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 24px;\n\t}\n\t.control > button {\n\t\twidth: 36px;\n\t\theight: 36px;\n\t\tfont-size: 1.2em;\n\t\tfont-weight: bold;\n\t\tline-height: 0;\n\t\tclear: right;\n    float: right;\n\t\tmargin: 0 0 5px 0;\n\t\tborder: 2px solid #777;\n\t\tborder-radius: 5px;\n\t\tcursor: pointer;\n\t}\n\t@keyframes blink {\n\t\t50% {\n\t\t\topacity: 0;\n\t\t}\n\t}\n</style>","<script>\n\timport { renderHexJSON } from './hexjson';\n\timport { getData, getAdjacents } from './utils';\n\timport { hexurl, dataurl } from './config';\n\timport adj from './adj.json';\n\timport HexMap from './HexMap.svelte';\n\t\n\tconst width = 800;\n\tconst height = 1000;\n\tconst start = 'E06000052'; // Starting place\n\tconst dest = 'S12000017'; // Destination\n\t\n\t// DOM\n\tlet qcontainer;\n\t\n\t// DATA\n\tlet data;\n\t\n\t// GAME STATE\n\tlet selected;\n\tlet next;\n\tlet status = 'select'; // Game status, other options 'question', 'lost', 'won'\n\tlet right = []; // Array of place codes correctly guessed\n\tlet wrong = []; // Array of place codes wrongly guessed\n\t\n\tfunction doSelect(e) {\n\t\tif (status == 'select') {\n\t\t\tnext = e.detail.obj;\n\t\t\tstatus = 'question';\n\t\t\tqcontainer.scrollIntoView({behavior: \"smooth\"});\n\t\t\tsetStatus();\n\t\t\tdata = [...data];\n\t\t}\n\t}\n\t\n\tfunction setStatus() {\n\t\tdata.forEach(d => {\n\t\t\tif (selected && d.key == selected.key) {\n\t\t\t\td.status = 'selected';\n\t\t\t} else if (next && d.key == next.key) {\n\t\t\t\td.status = 'next';\n\t\t\t} else if (right.includes(d.key)) {\n\t\t\t\td.status = 'right';\n\t\t\t} else if (wrong.includes(d.key)) {\n\t\t\t\td.status = 'wrong';\n\t\t\t} else if (d.key == dest) {\n\t\t\t\td.status = 'dest';\n\t\t\t} else if (status == 'select' && selected.adj.includes(d.key)) {\n\t\t\t\td.status = 'adjacent';\n\t\t\t} else {\n\t\t\t\td.status = '';\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction guess(hl) {\n\t\tif ((hl == 'higher' && next.value >= selected.value) || (hl == 'lower' && next.value <= selected.value)) {\n\t\t\tright.push(next.key);\n\t\t\tif (next.key == dest) {\n\t\t\t\tstatus = 'won';\n\t\t\t} else {\n\t\t\t\tstatus = 'select';\n\t\t\t\tselected = next;\n\t\t\t}\n\t\t} else {\n\t\t\twrong.push(next.key);\n\t\t\tlet adjacent = data.filter(d => selected.adj.includes(d.key));\n\t\t\tadjacent = adjacent.filter(d => !wrong.includes(d.key) && !right.includes(d.key));\n\t\t\tif (!adjacent[0]) {\n\t\t\t\tstatus = 'lost';\n\t\t\t} else {\n\t\t\t\tstatus = 'select';\n\t\t\t}\n\t\t}\n\t\tnext = null;\n\t\tsetStatus();\n\t\tdata = [...data];\n\t}\n\t\n\tfunction restartGame() {\n\t\tright = [];\n\t\twrong = [];\n\t\tnext = null;\n\t\tselected = data.find(d => d.key == start);\n\t\tright.push(start);\n\t\tstatus = 'select';\n\t\tsetStatus();\n\t\tdata = [...data];\n\t}\n\t\n\tfetch(hexurl)\n\t.then(res => res.json())\n\t.then(json => {\n\t\tlet hexes = renderHexJSON(json, width, height);\n\t\thexes = hexes.filter(d => ['E','W', 'S'].includes(d.key.slice(0,1)));\n\t\t\n\t\tgetData(dataurl)\n\t\t.then(arr => {\n\t\t\tlet ind = {};\n\t\t\tarr.forEach(d => ind[d.code] = d.value);\n\t\t\t\n\t\t\thexes.forEach(d => {\n\t\t\t\td.value = ind[d.key];\n\t\t\t\td.adj = adj[d.key];\n\t\t\t});\n\t\t\tdata = hexes;\n\t\t\tselected = data.find(d => d.key == start);\n\t\t\tright.push(start);\n\t\t\tsetStatus();\n\t\t\tdata = [...data];\n\t\t});\n\t});\n</script>\n\n<main>\n\n<h1 class=\"orbitron\">\n\tMapBusters\n</h1>\n<h2>\n\tLand's End to John o' Groats edition\n</h2>\n\n{#if data && selected}\n\n<div id=\"q-container\" bind:this={qcontainer}>\n\t{#if status == 'won'}\n\t<span class=\"text-lrg orbitron\">Yay! You won!</span><br/>\n\t<button on:click={restartGame} class=\"green\">Play again</button>\n\t{:else if status == 'lost'}\n\t<span class=\"text-lrg orbitron\">Bad luck... You lose!</span><br/>\n\t<button on:click={restartGame} class=\"green\">Play again</button>\n\t{:else}\n\t<div>\n\t\t<span class=\"text-lrg orbitron\">{selected.n}</span><br/>\n\t\tPopulation <strong>{selected.value.toLocaleString()}</strong>\n\t</div>\n\t<div>\n\t\t{#if !next}\n\t\t<span class=\"text-lrg orbitron\">Select a place</span>\n\t\t{:else}\n\t\t<span class=\"text-lrg orbitron\">{next.n}</span><br/>\n\t\t<button on:click={() => guess('higher')} class=\"green\">Higher</button> or <button on:click|preventDefault={() => guess('lower')} class=\"red\">Lower</button>\n\t\t{/if}\n\t</div>\n\t{/if}\n</div>\n\n<div id=\"map-container\">\n\t<HexMap {data} {width} {height} {selected} on:select={doSelect}/>\n</div>\n{/if}\n\n<p class=\"text-sml\">\n\tCoded by <a href=\"https://twitter.com/bothness\" target=\"_blank\">Ahmad Barclay</a> with support from <a href=\"https://twitter.com/SamCtrl\" target=\"_blank\">Sam Cottrell</a>. Gameplay concept inspired by <a href=\"https://twitter.com/Frankman1000\" target=\"_blank\">Frank Donnarumma</a> and the brilliant ONS digital content team. Local authorities <a href=\"https://github.com/odileeds/hexmaps/\" target=\"_blank\">hexmap</a> by <a href=\"https://twitter.com/ODILeeds\" target=\"_blank\">ODI Leeds</a>. Hexmap <a href=\"https://github.com/olihawkins/d3-hexjson/\" target=\"_blank\">rendering script</a> by <a href=\"https://twitter.com/olihawkins\" target=\"_blank\">Oli Hawkins</a>. 2020 mid-year population estimates from <a href=\"https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland\" target=\"_blank\">ONS</a>.\n</p>\n\n</main>\n\n<style>\n\t@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@700&display=swap');\n\t\n\t:global(body) {\n\t\tbackground: #222;\n\t\tcolor: white;\n\t}\n\t.orbitron {\n\t\tfont-family: 'Orbitron', sans-serif;\n\t}\n\t.text-lrg {\n\t\tfont-size: 1.4em;\n\t\tfont-weight: bold;\n\t}\n\t.text-sml {\n\t\tfont-size: 0.85em;\n\t\tcolor: lightgrey;\n\t}\n\t#q-container {\n\t\tmin-height: 75px;\n\t\tbox-sizing: border-box;\n\t\tmargin: 0 0 20px 0;\n\t\tpadding: 10px 0;\n\t\tborder-top: 1px solid #ddd;\n\t\tborder-bottom: 1px solid #ddd;\n\t}\n\t#q-container > div {\n\t\tdisplay: inline-block;\n\t\tmargin: 0;\n\t\twidth: 49%;\n\t\tvertical-align: top;\n\t}\n\t#q-container button {\n\t\tpadding: 0 3px;\n\t\tfont-weight: bold;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\tmargin: 0;\n\t}\n\t.green {\n\t\tbackground-color: lightgreen;\n\t}\n\t.red {\n\t\tbackground-color: pink;\n\t}\n\t#map-container {\n\t\twidth: 100%;\n\t\theight: 350px;\n\t\tposition: relative;\n\t}\n\ta {\n\t\tcolor: lightblue;\n\t}\n\th1 {\n\t\tmargin-bottom: 0;\n\t}\n\th2 {\n\t\tmargin-top: 0;\n\t\tfont-weight: normal;\n\t\tfont-size: 1.2em;\n\t}\n\tmain {\n\t\tmax-width: 900px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n</style>","export const hexurl = './data/uk-local-authority-districts-2021.hexjson';\nexport const dataurl = './data/pop-midyear-2020.csv';","import {min, max} from \"d3-array\";\n\n// Main render method\nexport function renderHexJSON (hexjson, width, height) {\n\t// Get the layout\n\tvar layout = hexjson.layout;\n\n\t// Get the hex objects as an array\n\tvar hexes = [];\n\tvar hexRadius = 0;\n\n\tObject.keys(hexjson.hexes).forEach(function (key) {\n\t\thexjson.hexes[key].key = key;\n\t\thexes.push(hexjson.hexes[key]);\n\t});\n\n\t// Calculate the number of rows and columns\n\tvar qmax = max(hexes, function (d) { return +d.q }),\n\t\tqmin = min(hexes, function (d) { return +d.q }),\n\t\trmax = max(hexes, function (d) { return +d.r }),\n\t\trmin = min(hexes, function (d) { return +d.r });\n\n\tvar qnum = qmax - qmin + 1,\n\t\trnum = rmax - rmin + 1;\n\n\t// Calculate maximum radius the hexagons can have to fit the svg\n\tif (layout === \"odd-r\" || layout === \"even-r\") {\n\t\thexRadius = min([(width) / ((qnum + 0.5) * Math.sqrt(3)),\n\t\t\theight / ((rnum + 1 / 3) * 1.5)]);\n\t} else {\n\t\thexRadius = min([(height) / ((rnum + 0.5) * Math.sqrt(3)),\n\t\t\twidth / ((qnum + 1 / 3) * 1.5)]);\n\t}\n\n\t// Calculate the hexagon width\n\tvar hexWidth = hexRadius * Math.sqrt(3);\n\n\t// Get the vertices and points for this layout\n\tvar vertices = getVertices(layout, hexWidth, hexRadius);\n\tvar points = getPoints(vertices);\n\n\t// Calculate the values needed to render each hex and add to hexes\n\thexes.forEach(function (hex) {\n\t\t// Calculate the absolute co-ordinates of each hex\n\t\thex.qc = hex.q - qmin;\n\t\thex.rc = rmax - hex.r;\n\n\t\t// Calculate the x and y position of each hex for this svg\n\t\thex.x = getX(hex, layout, hexWidth, hexRadius);\n\t\thex.y = getY(hex, layout, hexWidth, hexRadius);\n\n\t\t// Add the vertex positions and points relative to x and y\n\t\thex.vertices = vertices;\n\t\thex.points = points;\n\t});\n\n\treturn hexes;\n}\n\n// Get the x position for a hex\nfunction getX (hex, layout, hexWidth, hexRadius) {\n\tvar x = 0,\n\t\txOffset = 0;\n\n\tswitch (layout) {\n\t\tcase \"odd-r\":\n\t\t\txOffset = (hex.rc % 2 === 1) ? hexWidth : (hexWidth / 2);\n\t\t\tx = (hex.qc * hexWidth) + xOffset;\n\t\t\tbreak;\n\n\t\tcase \"even-r\":\n\t\t\txOffset = (hex.rc % 2 === 0) ? hexWidth : (hexWidth / 2);\n\t\t\tx = (hex.qc * hexWidth) + xOffset;\n\t\t\tbreak;\n\n\t\tcase \"odd-q\":\n\t\tcase \"even-q\":\n\t\t\tx = (hex.qc * hexRadius * 1.5) + hexRadius;\n\t\t\tbreak;\n\t}\n\n\treturn x;\n}\n\n// Get the y position for a hex\nfunction getY (hex, layout, hexWidth, hexRadius) {\n\tvar y = 0,\n\t\tyOffset = 0;\n\n\tswitch (layout) {\n\t\tcase \"odd-r\":\n\t\tcase \"even-r\":\n\t\t\ty = (hex.rc * hexRadius * 1.5) + hexRadius;\n\t\t\tbreak;\n\n\t\tcase \"odd-q\":\n\t\t\tyOffset = (hex.qc % 2 === 1) ? hexWidth : (hexWidth / 2);\n\t\t\ty = (hex.rc * hexWidth) + yOffset;\n\t\t\tbreak;\n\n\t\tcase \"even-q\":\n\t\t\tyOffset = (hex.qc % 2 === 0) ? hexWidth : (hexWidth / 2);\n\t\t\ty = (hex.rc * hexWidth) + yOffset;\n\t\t\tbreak;\n\t}\n\n\treturn y;\n}\n\n// Get the positions of the vertices for the hex:\n// - Row layouts are ordered from the topmost vertex clockwise\n// - Column layouts are ordered from the leftmost vertex clockwise\nfunction getVertices (layout, hexWidth, hexRadius) {\n\tvar vertices = [];\n\n\tswitch (layout) {\n\t\tcase \"odd-r\":\n\t\tcase \"even-r\":\n\n\t\t\tvertices.push({x: 0, y: (0 - hexRadius)});\n\t\t\tvertices.push({x: (0 + hexWidth * 0.5), y: (0 - 0.5 * hexRadius)});\n\t\t\tvertices.push({x: (0 + hexWidth * 0.5), y: (0 + 0.5 * hexRadius)});\n\t\t\tvertices.push({x: 0, y: (0 + hexRadius)});\n\t\t\tvertices.push({x: (0 - hexWidth * 0.5), y: (0 + 0.5 * hexRadius)});\n\t\t\tvertices.push({x: (0 - hexWidth * 0.5), y: (0 - 0.5 * hexRadius)});\n\t\t\tbreak;\n\n\t\tcase \"odd-q\":\n\t\tcase \"even-q\":\n\n\t\t\tvertices.push({x: (0 - hexRadius), y: 0});\n\t\t\tvertices.push({x: (0 - 0.5 * hexRadius), y: (0 - hexWidth * 0.5)});\n\t\t\tvertices.push({x: (0 + 0.5 * hexRadius), y: (0 - hexWidth * 0.5)});\n\t\t\tvertices.push({x: (0 + hexRadius), y: 0});\n\t\t\tvertices.push({x: (0 + 0.5 * hexRadius), y: (0 + hexWidth * 0.5)});\n\t\t\tvertices.push({x: (0 - 0.5 * hexRadius), y: (0 + hexWidth * 0.5)});\n\t\t\tbreak;\n\t}\n\n\treturn vertices;\n}\n\n// Get the points attribute for a polygon with these vertices\nfunction getPoints (vertices) {\n\tvar points = \"\";\n\tvertices.forEach(function (v) { points += v.x + \",\" + v.y + \" \" });\n\treturn points.substring(0, points.length - 1);\n}\n\n// Creates a hexjson grid with the layout and dimensions of the given hexjson\nexport function getGridForHexJSON (hexjson) {\n\t// Create a new HexJSON object for the grid\n\tvar grid = {};\n\tgrid.layout = hexjson.layout;\n\tgrid.hexes = {};\n\n\t// Get the hex objects from the hexjson as an array\n\tvar hexes = [];\n\n\tObject.keys(hexjson.hexes).forEach(function (key) {\n\t\thexes.push(hexjson.hexes[key]);\n\t});\n\n\t// Calculate the number of rows and columns in the grid\n\tvar qmax = max(hexes, function (d) { return +d.q }),\n\t\tqmin = min(hexes, function (d) { return +d.q }),\n\t\trmax = max(hexes, function (d) { return +d.r }),\n\t\trmin = min(hexes, function (d) { return +d.r });\n\n\t// Create the hexjson grid\n\tvar i, j, fkey;\n\tfor (i = qmin; i <= qmax; i++) {\n\t\tfor (j = rmin; j <= rmax; j++) {\n\t\t\tfkey = \"Q\" + i + \"R\" + j;\n\t\t\tgrid.hexes[fkey] = {q: i, r: j};\n\t\t}\n\t}\n\n\treturn grid;\n}\n\n// Creates a list of dots along the boundaries between\n// hexes which have different values of \"field\"\nexport function getBoundaryDotsForHexJSON (hexjson, width, height, field) {\n\t// Get the hex objects from the hexjson as an array\n\tvar hexes = [];\n\tvar layout = hexjson.layout;\n\n\tObject.keys(hexjson.hexes).forEach(function (key) {\n\t\thexes.push(hexjson.hexes[key]);\n\t});\n\n\t// Calculate the number of rows and columns\n\tvar qmax = max(hexes, function (d) { return +d.q }),\n\t\tqmin = min(hexes, function (d) { return +d.q }),\n\t\trmax = max(hexes, function (d) { return +d.r }),\n\t\trmin = min(hexes, function (d) { return +d.r });\n\n\tvar qnum = qmax - qmin + 1,\n\t\trnum = rmax - rmin + 1;\n\tvar hexRadius;\n\n\t// Calculate maximum radius the hexagons can have to fit the svg\n\tif (layout === \"odd-r\" || layout === \"even-r\") {\n\t\thexRadius = min([(width) / ((qnum + 0.5) * Math.sqrt(3)),\n\t\t\theight / ((rnum + 1 / 3) * 1.5)]);\n\t} else {\n\t\thexRadius = min([(height) / ((rnum + 0.5) * Math.sqrt(3)),\n\t\t\twidth / ((qnum + 1 / 3) * 1.5)]);\n\t}\n\n\t// Calculate the hexagon width\n\tvar hexWidth = hexRadius * Math.sqrt(3);\n\t// Create an array into which we will put points along the\n\t// boundaries between differing hexes.\n\t// Each edge has five points, equally spaced.\n\n\tvar lines = [];\n\tvar hexRadiusSquared = hexRadius * hexRadius * 4;\n\tvar maxHex = hexes.length;\n\tif (maxHex > 1) {\n\t\thexes.forEach(function (hex) {\n\t\t\thex.qc = hex.q - qmin;\n\t\t\thex.rc = rmax - hex.r;\n\n\t\t\t// Calculate the x and y position of each hex for this svg\n\t\t\thex.x = getX(hex, layout, hexWidth, hexRadius);\n\t\t\thex.y = getY(hex, layout, hexWidth, hexRadius);\n\t\t});\n\t\tfor (var i = 0; i < maxHex - 1; i++) {\n\t\t\tfor (var j = i + 1; j < maxHex; j++) {\n\t\t\t\tvar hex = hexes[i];\n\t\t\t\tvar otherHex = hexes[j];\n\t\t\t\tif (hex[field] !== otherHex[field]) {\n\t\t\t\t\tif (Math.abs(hex.q - otherHex.q) <= 1 &&\n\t\t\t\t\t\tMath.abs(hex.r - otherHex.r) <= 1) {\n\t\t\t\t\t\tif (((hex.x - otherHex.x) * (hex.x - otherHex.x)) +\n\t\t\t\t\t\t\t((hex.y - otherHex.y) * (hex.y - otherHex.y)) < hexRadiusSquared) {\n\t\t\t\t\t\t\t// They're neighbours\n\t\t\t\t\t\t\tvar midpoint = {};\n\t\t\t\t\t\t\tmidpoint.x = otherHex.x + (hex.x - otherHex.x) / 2;\n\t\t\t\t\t\t\tmidpoint.y = otherHex.y + (hex.y - otherHex.y) / 2;\n\t\t\t\t\t\t\tvar perp = {};\n\t\t\t\t\t\t\tvar denom = Math.sqrt(3) * 4;\n\t\t\t\t\t\t\tperp.dx = (hex.y - otherHex.y) / denom;\n\t\t\t\t\t\t\tperp.dy = -(hex.x - otherHex.x) / denom;\n\t\t\t\t\t\t\tlines.push({x: midpoint.x - 2 * perp.dx, y: midpoint.y - 2 * perp.dy});\n\t\t\t\t\t\t\tlines.push({x: midpoint.x - perp.dx, y: midpoint.y - perp.dy});\n\t\t\t\t\t\t\tlines.push({x: midpoint.x, y: midpoint.y});\n\t\t\t\t\t\t\tlines.push({x: midpoint.x + perp.dx, y: midpoint.y + perp.dy});\n\t\t\t\t\t\t\tlines.push({x: midpoint.x + 2 * perp.dx, y: midpoint.y + 2 * perp.dy});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn lines;\n}\n\n// Creates a list of line segments along the boundaries\n// between hexes which have different values of \"field\"\nexport function getBoundarySegmentsForHexJSON (hexjson, width, height, field) {\n\t// Get the hex objects from the hexjson as an array\n\tvar hexes = [];\n\tvar layout = hexjson.layout;\n\n\tObject.keys(hexjson.hexes).forEach(function (key) {\n\t\thexes.push(hexjson.hexes[key]);\n\t});\n\n\t// Calculate the number of rows and columns\n\tvar qmax = max(hexes, function (d) { return +d.q }),\n\t\tqmin = min(hexes, function (d) { return +d.q }),\n\t\trmax = max(hexes, function (d) { return +d.r }),\n\t\trmin = min(hexes, function (d) { return +d.r });\n\n\tvar qnum = qmax - qmin + 1,\n\t\trnum = rmax - rmin + 1;\n\tvar hexRadius;\n\n\t// Calculate maximum radius the hexagons can have to fit the svg\n\tif (layout === \"odd-r\" || layout === \"even-r\") {\n\t\thexRadius = min([(width) / ((qnum + 0.5) * Math.sqrt(3)),\n\t\t\theight / ((rnum + 1 / 3) * 1.5)]);\n\t} else {\n\t\thexRadius = min([(height) / ((rnum + 0.5) * Math.sqrt(3)),\n\t\t\twidth / ((qnum + 1 / 3) * 1.5)]);\n\t}\n\n\t// Calculate the hexagon width\n\tvar hexWidth = hexRadius * Math.sqrt(3);\n\t// Create an array into which we will put points along the\n\t// boundaries between differing hexes.\n\n\t// Each segment will be of the form\n\t// {x: <start point X>, y: <start point Y>, cx: <difference X>, cy: <difference Y> }\n\t// intended to be used with the simple line drawing functionality of d3\n\t//\n\n\tvar segments = [];\n\tvar hexRadiusSquared = hexRadius * hexRadius * 4;\n\tvar maxHex = hexes.length;\n\tif (maxHex > 1) {\n\t\thexes.forEach(function (hex) {\n\t\t\thex.qc = hex.q - qmin;\n\t\t\thex.rc = rmax - hex.r;\n\n\t\t\t// Calculate the x and y position of each hex for this svg\n\t\t\thex.x = getX(hex, layout, hexWidth, hexRadius);\n\t\t\thex.y = getY(hex, layout, hexWidth, hexRadius);\n\t\t});\n\t\tfor (var i = 0; i < maxHex - 1; i++) {\n\t\t\tfor (var j = i + 1; j < maxHex; j++) {\n\t\t\t\tvar hex = hexes[i];\n\t\t\t\tvar otherHex = hexes[j];\n\t\t\t\tif (hex[field] !== otherHex[field]) {\n\t\t\t\t\tif (Math.abs(hex.q - otherHex.q) <= 1 &&\n\t\t\t\t\t\tMath.abs(hex.r - otherHex.r) <= 1) {\n\t\t\t\t\t\tif (((hex.x - otherHex.x) * (hex.x - otherHex.x)) +\n\t\t\t\t\t\t\t((hex.y - otherHex.y) * (hex.y - otherHex.y)) < hexRadiusSquared) {\n\t\t\t\t\t\t\t// They're neighbours\n\t\t\t\t\t\t\tvar midpoint = {};\n\t\t\t\t\t\t\tmidpoint.x = otherHex.x + (hex.x - otherHex.x) / 2;\n\t\t\t\t\t\t\tmidpoint.y = otherHex.y + (hex.y - otherHex.y) / 2;\n\t\t\t\t\t\t\tvar perp = {};\n\t\t\t\t\t\t\tvar direction = +1;\n\t\t\t\t\t\t\tif (hex[field] < otherHex[field]) {\n\t\t\t\t\t\t\t\tdirection = -1;\n\t\t\t\t\t\t\t} // otherwise, direction will be +1\n\t\t\t\t\t\t\tvar denom = Math.sqrt(3) * 2 * direction;\n\t\t\t\t\t\t\tperp.dx = (hex.y - otherHex.y) / denom;\n\t\t\t\t\t\t\tperp.dy = -(hex.x - otherHex.x) / denom;\n\t\t\t\t\t\t\tsegments.push({\n\t\t\t\t\t\t\t\tx1: midpoint.x - perp.dx,\n\t\t\t\t\t\t\t\ty1: midpoint.y - perp.dy,\n\t\t\t\t\t\t\t\tx2: midpoint.x + perp.dx,\n\t\t\t\t\t\t\t\ty2: midpoint.y + perp.dy});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn segments;\n}","import { csvParse, autoType } from 'd3-dsv';\n\nexport async function getData(url) {\n  let response = await fetch(url);\n  let string = await response.text();\n\tlet data = await csvParse(string, autoType);\n  return data;\n}\n\nexport function getAdjacents(data) {\n\t\tlet adj = {};\n\t\tdata.forEach(d => {\n\t\t\tadj[d.key] = [];\n\t\t\tdata.forEach(e => {\n\t\t\t\tlet found = false;\n\t\t\t\td.vertices.forEach(dv => {\n\t\t\t\t\tlet dx = (d.x + dv.x).toFixed(3);\n\t\t\t\t\tlet dy = (d.y + dv.y).toFixed(3);\n\t\t\t\t\te.vertices.forEach(ev => {\n\t\t\t\t\t\tlet ex = (e.x + ev.x).toFixed(3);\n\t\t\t\t\t\tlet ey = (e.y + ev.y).toFixed(3);\n\t\t\t\t\t\tif (dx == ex && dy == ey && d.key != e.key) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tif (found) {\n\t\t\t\t\tadj[d.key].push(e.key);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\treturn adj;\n\t}","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","null_to_empty","value","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","transition_out","o","d","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","max","values","valueof","undefined","min","EOL","EOF","objectConverter","columns","Function","JSON","stringify","join","inferColumns","rows","columnSet","row","column","pad","width","s","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","csv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","t","N","I","n","eof","eol","token","j","replace","preformatBody","formatValue","formatRow","test","parse","convert","object","customConverter","format","concat","formatBody","formatRows","dsv","csvParse","autoType","number","trim","NaN","match","fixtz","getHours","subscriber_queue","cubicOut","is_date","prototype","toString","get_interpolator","isArray","arr","bi","getTime","delta","interpolators","result","tweened","defaults","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","writable","target_value","opts","previous_task","started","delay","duration","easing","linear","interpolate","abort","promise","fulfill","loop","elapsed","makePoints","vertices","status","y","iterations","points","dispatch","height","selected","el","zoomfactor","onClick","adj","includes","code","reCenter","scrollIntoView","behavior","inline","$zoomfactor","toLocaleString","preventDefault","r","dest","qcontainer","next","right","wrong","setStatus","guess","hl","adjacent","fetch","res","json","hexes","hexjson","layout","hexRadius","qmax","q","qmin","rmax","rmin","qnum","rnum","hexWidth","Math","sqrt","getVertices","v","substring","getPoints","hex","qc","rc","xOffset","getX","yOffset","getY","renderHexJSON","async","url","response","string","getData","ind","find","body"],"mappings":"gCAAA,SAASA,KACT,MAAMC,EAAWC,GAAKA,EACtB,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAiChF,SAASE,EAAoBC,EAAWC,EAAOC,GAC3CF,EAAUG,GAAGC,WAAWC,KAb5B,SAAmBJ,KAAUK,GACzB,GAAa,MAATL,EACA,OAAOtB,EAEX,MAAM4B,EAAQN,EAAMO,aAAaF,GACjC,OAAOC,EAAME,YAAc,IAAMF,EAAME,cAAgBF,EAQ1BC,CAAUP,EAAOC,IAmFlD,SAASQ,EAAcC,GACnB,OAAgB,MAATA,EAAgB,GAAKA,EAWhC,MAAMC,EAA8B,oBAAXC,OACzB,IAAIC,EAAMF,EACJ,IAAMC,OAAOE,YAAYD,MACzB,IAAME,KAAKF,MACbG,EAAML,EAAYM,GAAMC,sBAAsBD,GAAMvC,EASxD,MAAMyC,EAAQ,IAAIC,IAClB,SAASC,EAAUR,GACfM,EAAM3B,SAAQ8B,IACLA,EAAKC,EAAEV,KACRM,EAAMK,OAAOF,GACbA,EAAKG,QAGM,IAAfN,EAAMO,MACNV,EAAIK,GA+HZ,SAASM,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAiBlC,SAASG,EAAYH,GACjB,OAAOC,SAASG,gBAAgB,6BAA8BJ,GAElE,SAASK,EAAKC,GACV,OAAOL,SAASM,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOlB,EAAMmB,EAAOC,EAASC,GAElC,OADArB,EAAKsB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMrB,EAAKuB,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAKxB,EAAMyB,EAAW5C,GACd,MAATA,EACAmB,EAAK0B,gBAAgBD,GAChBzB,EAAK2B,aAAaF,KAAe5C,GACtCmB,EAAK4B,aAAaH,EAAW5C,GAqLrC,SAASgD,EAASf,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKgB,YAAcf,IACnBD,EAAKC,KAAOA,GAapB,SAASgB,EAAU/B,EAAMgC,EAAKnD,EAAOoD,GACjCjC,EAAKkC,MAAMC,YAAYH,EAAKnD,EAAOoD,EAAY,YAAc,IA+RjE,IAAIG,EACJ,SAASC,EAAsBnE,GAC3BkE,EAAoBlE,EAExB,SAASoE,IACL,IAAKF,EACD,MAAM,IAAIG,MAAM,oDACpB,OAAOH,EAcX,SAASI,IACL,MAAMtE,EAAYoE,IAClB,MAAO,CAACG,EAAMC,KACV,MAAMlE,EAAYN,EAAUG,GAAGG,UAAUiE,GACzC,GAAIjE,EAAW,CAGX,MAAM2C,EA1OlB,SAAsBsB,EAAMC,EAAQC,GAAU,GAC1C,MAAMC,EAAIlC,SAASmC,YAAY,eAE/B,OADAD,EAAEE,gBAAgBL,EAAME,GAAS,EAAOD,GACjCE,EAuOeG,CAAaN,EAAMC,GACjClE,EAAUwE,QAAQrF,SAAQN,IACtBA,EAAG4F,KAAK/E,EAAWiD,QA4BnC,MAAM+B,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBrG,GACzB+F,EAAiB7E,KAAKlB,GAK1B,IAAIsG,GAAW,EACf,MAAMC,EAAiB,IAAIrE,IAC3B,SAASsE,IACL,IAAIF,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAIG,EAAI,EAAGA,EAAIZ,EAAiBa,OAAQD,GAAK,EAAG,CACjD,MAAM5F,EAAYgF,EAAiBY,GACnCzB,EAAsBnE,GACtB8F,EAAO9F,EAAUG,IAIrB,IAFAgE,EAAsB,MACtBa,EAAiBa,OAAS,EACnBZ,EAAkBY,QACrBZ,EAAkBc,KAAlBd,GAIJ,IAAK,IAAIW,EAAI,EAAGA,EAAIV,EAAiBW,OAAQD,GAAK,EAAG,CACjD,MAAM1F,EAAWgF,EAAiBU,GAC7BF,EAAeM,IAAI9F,KAEpBwF,EAAeO,IAAI/F,GACnBA,KAGRgF,EAAiBW,OAAS,QACrBb,EAAiBa,QAC1B,KAAOV,EAAgBU,QACnBV,EAAgBY,KAAhBZ,GAEJI,GAAmB,EACnBE,GAAW,EACXC,EAAeQ,SAEnB,SAASJ,EAAO3F,GACZ,GAAoB,OAAhBA,EAAGgG,SAAmB,CACtBhG,EAAG2F,SACHvG,EAAQY,EAAGiG,eACX,MAAMC,EAAQlG,EAAGkG,MACjBlG,EAAGkG,MAAQ,EAAE,GACblG,EAAGgG,UAAYhG,EAAGgG,SAASG,EAAEnG,EAAGoG,IAAKF,GACrClG,EAAGqG,aAAa/G,QAAQ+F,IAiBhC,MAAMiB,EAAW,IAAIpF,IACrB,IAAIqF,EAcJ,SAASC,EAAcC,EAAOC,GACtBD,GAASA,EAAMhB,IACfa,EAAShF,OAAOmF,GAChBA,EAAMhB,EAAEiB,IAGhB,SAASC,EAAeF,EAAOC,EAAO1E,EAAQjC,GAC1C,GAAI0G,GAASA,EAAMG,EAAG,CAClB,GAAIN,EAAST,IAAIY,GACb,OACJH,EAASR,IAAIW,GACbF,EAAOlF,EAAEnB,MAAK,KACVoG,EAAShF,OAAOmF,GACZ1G,IACIiC,GACAyE,EAAMI,EAAE,GACZ9G,QAGR0G,EAAMG,EAAEF,IAwmBhB,SAASI,EAAgBjH,EAAW6B,EAAQI,EAAQiF,GAChD,MAAMf,SAAEA,EAAQgB,SAAEA,EAAQ/G,WAAEA,EAAUoG,aAAEA,GAAiBxG,EAAUG,GACnEgG,GAAYA,EAASiB,EAAEvF,EAAQI,GAC1BiF,GAED1B,GAAoB,KAChB,MAAM6B,EAAiBF,EAASG,IAAIpI,GAAKqI,OAAO7H,GAC5CU,EACAA,EAAWC,QAAQgH,GAKnB9H,EAAQ8H,GAEZrH,EAAUG,GAAGgH,SAAW,MAGhCX,EAAa/G,QAAQ+F,GAEzB,SAASgC,EAAkBxH,EAAWyH,GAClC,MAAMtH,EAAKH,EAAUG,GACD,OAAhBA,EAAGgG,WACH5G,EAAQY,EAAGC,YACXD,EAAGgG,UAAYhG,EAAGgG,SAASa,EAAES,GAG7BtH,EAAGC,WAAaD,EAAGgG,SAAW,KAC9BhG,EAAGoG,IAAM,IAGjB,SAASmB,EAAW1H,EAAW4F,IACI,IAA3B5F,EAAUG,GAAGkG,MAAM,KACnBrB,EAAiB3E,KAAKL,GAxvBrBuF,IACDA,GAAmB,EACnBH,EAAiBuC,KAAKhC,IAwvBtB3F,EAAUG,GAAGkG,MAAMuB,KAAK,IAE5B5H,EAAUG,GAAGkG,MAAOT,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASiC,EAAK7H,EAAWmD,EAAS2E,EAAUC,EAAiBC,EAAWC,EAAOC,EAAe7B,EAAQ,EAAE,IACpG,MAAM8B,EAAmBjE,EACzBC,EAAsBnE,GACtB,MAAMG,EAAKH,EAAUG,GAAK,CACtBgG,SAAU,KACVI,IAAK,KAEL0B,MAAAA,EACAnC,OAAQnH,EACRqJ,UAAAA,EACAI,MAAOhJ,IAEP+H,SAAU,GACV/G,WAAY,GACZiI,cAAe,GACfjC,cAAe,GACfI,aAAc,GACd8B,QAAS,IAAIC,IAAIpF,EAAQmF,UAAYH,EAAmBA,EAAiBhI,GAAGmI,QAAU,KAEtFhI,UAAWlB,IACXiH,MAAAA,EACAmC,YAAY,EACZC,KAAMtF,EAAQtB,QAAUsG,EAAiBhI,GAAGsI,MAEhDP,GAAiBA,EAAc/H,EAAGsI,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAvI,EAAGoG,IAAMuB,EACHA,EAAS9H,EAAWmD,EAAQ8E,OAAS,IAAI,CAACrC,EAAG+C,KAAQC,KACnD,MAAMjI,EAAQiI,EAAK/C,OAAS+C,EAAK,GAAKD,EAOtC,OANIxI,EAAGoG,KAAOyB,EAAU7H,EAAGoG,IAAIX,GAAIzF,EAAGoG,IAAIX,GAAKjF,MACtCR,EAAGqI,YAAcrI,EAAGiI,MAAMxC,IAC3BzF,EAAGiI,MAAMxC,GAAGjF,GACZ+H,GACAhB,EAAW1H,EAAW4F,IAEvB+C,KAET,GACNxI,EAAG2F,SACH4C,GAAQ,EACRnJ,EAAQY,EAAGiG,eAEXjG,EAAGgG,WAAW4B,GAAkBA,EAAgB5H,EAAGoG,KAC/CpD,EAAQtB,OAAQ,CAChB,GAAIsB,EAAQ0F,QAAS,CAEjB,MAAMC,EAvxClB,SAAkBxG,GACd,OAAOyG,MAAMC,KAAK1G,EAAQ2G,YAsxCJC,CAAS/F,EAAQtB,QAE/B1B,EAAGgG,UAAYhG,EAAGgG,SAASgD,EAAEL,GAC7BA,EAAMrJ,QAAQ0C,QAIdhC,EAAGgG,UAAYhG,EAAGgG,SAAS3E,IAE3B2B,EAAQiG,OACRzC,EAAc3G,EAAUG,GAAGgG,UAC/Bc,EAAgBjH,EAAWmD,EAAQtB,OAAQsB,EAAQlB,OAAQkB,EAAQ+D,eAEnEvB,IAEJxB,EAAsBgE,GAkD1B,MAAMkB,EACFC,WACI9B,EAAkB+B,KAAM,GACxBA,KAAKD,SAAW3K,EAEpB6K,IAAIjF,EAAMrE,GACN,MAAMI,EAAaiJ,KAAKpJ,GAAGG,UAAUiE,KAAUgF,KAAKpJ,GAAGG,UAAUiE,GAAQ,IAEzE,OADAjE,EAAUD,KAAKH,GACR,KACH,MAAMuJ,EAAQnJ,EAAUoJ,QAAQxJ,IACjB,IAAXuJ,GACAnJ,EAAUqJ,OAAOF,EAAO,IAGpCG,KAAKC,GAtzDT,IAAkBC,EAuzDNP,KAAKQ,QAvzDCD,EAuzDkBD,EAtzDG,IAA5BxK,OAAO2K,KAAKF,GAAKjE,UAuzDhB0D,KAAKpJ,GAAGqI,YAAa,EACrBe,KAAKQ,MAAMF,GACXN,KAAKpJ,GAAGqI,YAAa,ICp2DlB,SAASyB,EAAIC,EAAQC,GAClC,IAAIF,EACJ,QAAgBG,IAAZD,EACF,IAAK,MAAMxJ,KAASuJ,EACL,MAATvJ,IACIsJ,EAAMtJ,QAAkByJ,IAARH,GAAqBtJ,GAASA,KACpDsJ,EAAMtJ,OAGL,CACL,IAAI8I,GAAS,EACb,IAAK,IAAI9I,KAASuJ,EACiC,OAA5CvJ,EAAQwJ,EAAQxJ,IAAS8I,EAAOS,MAC7BD,EAAMtJ,QAAkByJ,IAARH,GAAqBtJ,GAASA,KACpDsJ,EAAMtJ,GAIZ,OAAOsJ,EClBM,SAASI,EAAIH,EAAQC,GAClC,IAAIE,EACJ,QAAgBD,IAAZD,EACF,IAAK,MAAMxJ,KAASuJ,EACL,MAATvJ,IACI0J,EAAM1J,QAAkByJ,IAARC,GAAqB1J,GAASA,KACpD0J,EAAM1J,OAGL,CACL,IAAI8I,GAAS,EACb,IAAK,IAAI9I,KAASuJ,EACiC,OAA5CvJ,EAAQwJ,EAAQxJ,IAAS8I,EAAOS,MAC7BG,EAAM1J,QAAkByJ,IAARC,GAAqB1J,GAASA,KACpD0J,EAAM1J,GAIZ,OAAO0J,EClBT,IAAIC,EAAM,GACNC,EAAM,GAKV,SAASC,GAAgBC,GACvB,OAAO,IAAIC,SAAS,IAAK,WAAaD,EAAQnD,KAAI,SAAS/E,EAAMqD,GAC/D,OAAO+E,KAAKC,UAAUrI,GAAQ,OAASqD,EAAI,aAC1CiF,KAAK,KAAO,KAWjB,SAASC,GAAaC,GACpB,IAAIC,EAAY3L,OAAOC,OAAO,MAC1BmL,EAAU,GAUd,OARAM,EAAKtL,SAAQ,SAASwL,GACpB,IAAK,IAAIC,KAAUD,EACXC,KAAUF,GACdP,EAAQpK,KAAK2K,EAAUE,GAAUA,MAKhCT,EAGT,SAASU,GAAIxK,EAAOyK,GAClB,IAAIC,EAAI1K,EAAQ,GAAIkF,EAASwF,EAAExF,OAC/B,OAAOA,EAASuF,EAAQ,IAAIrC,MAAMqC,EAAQvF,EAAS,GAAGgF,KAAK,GAAKQ,EAAIA,EAStE,SAASC,GAAWC,GAClB,IAPkBC,EAOdC,EAAQF,EAAKG,cACbC,EAAUJ,EAAKK,gBACfC,EAAUN,EAAKO,gBACfC,EAAeR,EAAKS,qBACxB,OAAOC,MAAMV,GAAQ,iBAXHC,EAYDD,EAAKW,kBAXR,EAAI,IAAMf,IAAKK,EAAM,GAC/BA,EAAO,KAAO,IAAML,GAAIK,EAAM,GAC9BL,GAAIK,EAAM,IAS+B,IAAML,GAAII,EAAKY,cAAgB,EAAG,GAAK,IAAMhB,GAAII,EAAKa,aAAc,IAC1GL,EAAe,IAAMZ,GAAIM,EAAO,GAAK,IAAMN,GAAIQ,EAAS,GAAK,IAAMR,GAAIU,EAAS,GAAK,IAAMV,GAAIY,EAAc,GAAK,IACnHF,EAAU,IAAMV,GAAIM,EAAO,GAAK,IAAMN,GAAIQ,EAAS,GAAK,IAAMR,GAAIU,EAAS,GAAK,IAChFF,GAAWF,EAAQ,IAAMN,GAAIM,EAAO,GAAK,IAAMN,GAAIQ,EAAS,GAAK,IACjE,ICtDR,IAAIU,GDyDW,SAASC,GACtB,IAAIC,EAAW,IAAIC,OAAO,KAAQF,EAAY,SAC1CG,EAAYH,EAAUI,WAAW,GAWrC,SAASC,EAAU/J,EAAMlB,GACvB,IAIIkL,EAJA7B,EAAO,GACP8B,EAAIjK,EAAKiD,OACTiH,EAAI,EACJC,EAAI,EAEJC,EAAMH,GAAK,EACXI,GAAM,EAMV,SAASC,IACP,GAAIF,EAAK,OAAOzC,EAChB,GAAI0C,EAAK,OAAOA,GAAM,EAAO3C,EAG7B,IAAI1E,EAAUpE,EAAP2L,EAAIL,EACX,GAzFM,KAyFFlK,EAAK8J,WAAWS,GAAc,CAChC,KAAOL,IAAMD,GA1FT,KA0FcjK,EAAK8J,WAAWI,IA1F9B,KA0F8ClK,EAAK8J,aAAaI,KAIpE,OAHKlH,EAAIkH,IAAMD,EAAGG,GAAM,EA1FlB,MA2FIxL,EAAIoB,EAAK8J,WAAWI,MAAmBG,GAAM,EA1FlD,KA2FIzL,IAAgByL,GAAM,EA5FzB,KA4FmCrK,EAAK8J,WAAWI,MAAkBA,GACpElK,EAAKkC,MAAMqI,EAAI,EAAGvH,EAAI,GAAGwH,QAAQ,MAAO,KAIjD,KAAON,EAAID,GAAG,CACZ,GAlGM,MAkGDrL,EAAIoB,EAAK8J,WAAW9G,EAAIkH,MAAmBG,GAAM,OACjD,GAlGA,KAkGIzL,EAAgByL,GAAM,EAnGzB,KAmGmCrK,EAAK8J,WAAWI,MAAkBA,OACtE,GAAItL,IAAMiL,EAAW,SAC1B,OAAO7J,EAAKkC,MAAMqI,EAAGvH,GAIvB,OAAOoH,GAAM,EAAMpK,EAAKkC,MAAMqI,EAAGN,GAGnC,IA5GU,KA+ENjK,EAAK8J,WAAWG,EAAI,MAAkBA,EA9EjC,KA+ELjK,EAAK8J,WAAWG,EAAI,MAAiBA,GA4BjCD,EAAIM,OAAa3C,GAAK,CAE5B,IADA,IAAIU,EAAM,GACH2B,IAAMtC,GAAOsC,IAAMrC,GAAKU,EAAI5K,KAAKuM,GAAIA,EAAIM,IAC5CxL,GAA4B,OAAtBuJ,EAAMvJ,EAAEuJ,EAAK8B,OACvBhC,EAAK1K,KAAK4K,GAGZ,OAAOF,EAGT,SAASsC,EAActC,EAAMN,GAC3B,OAAOM,EAAKzD,KAAI,SAAS2D,GACvB,OAAOR,EAAQnD,KAAI,SAAS4D,GAC1B,OAAOoC,EAAYrC,EAAIC,OACtBL,KAAKyB,MAkBZ,SAASiB,EAAUtC,GACjB,OAAOA,EAAI3D,IAAIgG,GAAazC,KAAKyB,GAGnC,SAASgB,EAAY3M,GACnB,OAAgB,MAATA,EAAgB,GACjBA,aAAiBK,KAAOsK,GAAW3K,GACnC4L,EAASiB,KAAK7M,GAAS,IAAM,IAAOA,EAAMyM,QAAQ,KAAM,MAAU,IAClEzM,EAGR,MAAO,CACL8M,MA5FF,SAAe7K,EAAMlB,GACnB,IAAIgM,EAASjD,EAASM,EAAO4B,EAAU/J,GAAM,SAASqI,EAAKrF,GACzD,GAAI8H,EAAS,OAAOA,EAAQzC,EAAKrF,EAAI,GACrC6E,EAAUQ,EAAKyC,EAAUhM,EAtD/B,SAAyB+I,EAAS/I,GAChC,IAAIiM,EAASnD,GAAgBC,GAC7B,OAAO,SAASQ,EAAKrF,GACnB,OAAOlE,EAAEiM,EAAO1C,GAAMrF,EAAG6E,IAmDMmD,CAAgB3C,EAAKvJ,GAAK8I,GAAgBS,MAGzE,OADAF,EAAKN,QAAUA,GAAW,GACnBM,GAuFP4B,UAAWA,EACXkB,OA5BF,SAAgB9C,EAAMN,GAEpB,OADe,MAAXA,IAAiBA,EAAUK,GAAaC,IACrC,CAACN,EAAQnD,IAAIgG,GAAazC,KAAKyB,IAAYwB,OAAOT,EAActC,EAAMN,IAAUI,KAAK,OA2B5FkD,WAxBF,SAAoBhD,EAAMN,GAExB,OADe,MAAXA,IAAiBA,EAAUK,GAAaC,IACrCsC,EAActC,EAAMN,GAASI,KAAK,OAuBzCmD,WApBF,SAAoBjD,GAClB,OAAOA,EAAKzD,IAAIiG,GAAW1C,KAAK,OAoBhC0C,UAAWA,EACXD,YAAaA,GC/JPW,CAAI,KAEHC,GAAW7B,GAAIoB,MCJX,SAASU,GAASR,GAC/B,IAAK,IAAI7J,KAAO6J,EAAQ,CACtB,IAAgCS,EAAQhH,EAApCzG,EAAQgN,EAAO7J,GAAKuK,OACxB,GAAK1N,EACA,GAAc,SAAVA,EAAkBA,GAAQ,OAC9B,GAAc,UAAVA,EAAmBA,GAAQ,OAC/B,GAAc,QAAVA,EAAiBA,EAAQ2N,SAC7B,GAAKrC,MAAMmC,GAAUzN,GACrB,CAAA,KAAIyG,EAAIzG,EAAM4N,MAAM,gGAIpB,SAHCC,IAAWpH,EAAE,KAAOA,EAAE,KAAIzG,EAAQA,EAAMyM,QAAQ,KAAM,KAAKA,QAAQ,IAAK,MAC5EzM,EAAQ,IAAIK,KAAKL,QAHeA,EAAQyN,OAJ9BzN,EAAQ,KAUpBgN,EAAO7J,GAAOnD,EAEhB,OAAOgN,EAIT,MAAMa,GAAQ,IAAIxN,KAAK,oBAAoByN,YAAc,IAAIzN,KAAK,oBAAoByN,kv2BChBtF,MAAMC,GAAmB,GC0DzB,SAASC,GAAS/B,GACd,MAAMlL,EAAIkL,EAAI,EACd,OAAOlL,EAAIA,EAAIA,EAAI,EC3DvB,SAASkN,GAAQ9E,GACb,MAA+C,kBAAxCzK,OAAOwP,UAAUC,SAAS/J,KAAK+E,GA8G1C,SAASiF,GAAiBlP,EAAGC,GACzB,GAAID,IAAMC,GAAKD,GAAMA,EACjB,MAAO,IAAMA,EACjB,MAAM0E,SAAc1E,EACpB,GAAI0E,WAAgBzE,GAAKiJ,MAAMiG,QAAQnP,KAAOkJ,MAAMiG,QAAQlP,GACxD,MAAM,IAAIuE,MAAM,+CAEpB,GAAI0E,MAAMiG,QAAQnP,GAAI,CAClB,MAAMoP,EAAMnP,EAAEwH,KAAI,CAAC4H,EAAItJ,IACZmJ,GAAiBlP,EAAE+F,GAAIsJ,KAElC,OAAOtC,GAAKqC,EAAI3H,KAAInI,GAAMA,EAAGyN,KAEjC,GAAa,WAATrI,EAAmB,CACnB,IAAK1E,IAAMC,EACP,MAAM,IAAIuE,MAAM,yBACpB,GAAIuK,GAAQ/O,IAAM+O,GAAQ9O,GAAI,CAC1BD,EAAIA,EAAEsP,UAEN,MAAMC,GADNtP,EAAIA,EAAEqP,WACYtP,EAClB,OAAO+M,GAAK,IAAI5L,KAAKnB,EAAI+M,EAAIwC,GAEjC,MAAMpF,EAAO3K,OAAO2K,KAAKlK,GACnBuP,EAAgB,GAItB,OAHArF,EAAKvK,SAAQqE,IACTuL,EAAcvL,GAAOiL,GAAiBlP,EAAEiE,GAAMhE,EAAEgE,OAE7C8I,IACH,MAAM0C,EAAS,GAIf,OAHAtF,EAAKvK,SAAQqE,IACTwL,EAAOxL,GAAOuL,EAAcvL,GAAK8I,MAE9B0C,GAGf,GAAa,WAAT/K,EAAmB,CACnB,MAAM6K,EAAQtP,EAAID,EAClB,OAAO+M,GAAK/M,EAAI+M,EAAIwC,EAExB,MAAM,IAAI/K,MAAM,sBAAsBE,YAE1C,SAASgL,GAAQ5O,EAAO6O,EAAW,IAC/B,MAAMvP,EF1IV,SAAkBU,EAAO8O,EAAQ9Q,GAC7B,IAAI+Q,EACJ,MAAMC,EAAc,IAAItO,IACxB,SAASuO,EAAIC,GACT,GAAIjQ,EAAee,EAAOkP,KACtBlP,EAAQkP,EACJH,GAAM,CACN,MAAMI,GAAapB,GAAiB7I,OACpC,IAAK,MAAMkK,KAAcJ,EACrBI,EAAW,KACXrB,GAAiBrO,KAAK0P,EAAYpP,GAEtC,GAAImP,EAAW,CACX,IAAK,IAAIlK,EAAI,EAAGA,EAAI8I,GAAiB7I,OAAQD,GAAK,EAC9C8I,GAAiB9I,GAAG,GAAG8I,GAAiB9I,EAAI,IAEhD8I,GAAiB7I,OAAS,IAuB1C,MAAO,CAAE+J,IAAAA,EAAK9J,OAlBd,SAAgB3G,GACZyQ,EAAIzQ,EAAGwB,KAiBWH,UAftB,SAAmBtB,EAAK8Q,EAAarR,GACjC,MAAMoR,EAAa,CAAC7Q,EAAK8Q,GAMzB,OALAL,EAAY1J,IAAI8J,GACS,IAArBJ,EAAYhO,OACZ+N,EAAOD,EAAMG,IAAQjR,GAEzBO,EAAIyB,GACG,KACHgP,EAAYlO,OAAOsO,GACM,IAArBJ,EAAYhO,OACZ+N,IACAA,EAAO,SEuGLO,CAAStP,GACvB,IAAIY,EACA2O,EAAevP,EACnB,SAASiP,EAAIC,EAAWM,GACpB,GAAa,MAATxP,EAEA,OADAV,EAAM2P,IAAIjP,EAAQkP,GACXxK,QAAQC,UAEnB4K,EAAeL,EACf,IAAIO,EAAgB7O,EAChB8O,GAAU,GACVC,MAAEA,EAAQ,EAACC,SAAEA,EAAW,IAAGC,OAAEA,EAASC,EAAMC,YAAEA,EAAc3B,IAAqBjQ,EAAOA,EAAO,GAAI0Q,GAAWW,GAClH,GAAiB,IAAbI,EAMA,OALIH,IACAA,EAAcO,QACdP,EAAgB,MAEpBnQ,EAAM2P,IAAIjP,EAAQuP,GACX7K,QAAQC,UAEnB,MAAMmK,EAAQ3O,IAAQwP,EACtB,IAAInR,EAuBJ,OAtBAoC,ERaR,SAAcrB,GACV,IAAIqB,EAGJ,OAFmB,IAAfH,EAAMO,MACNV,EAAIK,GACD,CACHsP,QAAS,IAAIvL,SAAQwL,IACjBzP,EAAM6E,IAAI1E,EAAO,CAAEC,EAAGtB,EAAUwB,EAAGmP,OAEvCF,QACIvP,EAAMK,OAAOF,KQtBVuP,EAAKhQ,IACR,GAAIA,EAAM2O,EACN,OAAO,EACNY,IACDlR,EAAKuR,EAAY/P,EAAOkP,GACA,mBAAbU,IACPA,EAAWA,EAAS5P,EAAOkP,IAC/BQ,GAAU,GAEVD,IACAA,EAAcO,QACdP,EAAgB,MAEpB,MAAMW,EAAUjQ,EAAM2O,EACtB,OAAIsB,EAAUR,GACVtQ,EAAM2P,IAAIjP,EAAQkP,IACX,IAGX5P,EAAM2P,IAAIjP,EAAQxB,EAAGqR,EAAOO,EAAUR,MAC/B,MAEJhP,EAAKqP,QAEhB,MAAO,CACHhB,IAAAA,EACA9J,OAAQ,CAAC3G,EAAIgR,IAASP,EAAIzQ,EAAG+Q,EAAcvP,GAAQwP,GACnD3P,UAAWP,EAAMO,2HCtJF+F,MAAEwG,EAAEjI,MAAM,EAAE,0MADFkM,GAAWzK,MAAE0K,8DADuB1K,MAAE2K,0DAA+B3K,MAAE1H,MAAI0H,MAAE4K,eAA5GnP,SACCJ,OACAA,qEAD8BoP,GAAWzK,MAAE0K,wCACvB1K,MAAEwG,EAAEjI,MAAM,EAAE,6BAFkCyB,MAAE2K,oEAA+B3K,MAAE1H,MAAI0H,MAAE4K,8HADrG5K,0BAALV,qTADgBU,SAAQA,4DAA2DA,KAAQA,qDAN/FvE,SACCJ,cACAA,gBAGDI,SACCJ,mIACQ2E,aAALV,+HAAAA,0BADgBU,SAAQA,0CAA2DA,KAAQA,iDTkU/F,SAAsB6K,EAAY3J,GAC9B,IAAK,IAAI7B,EAAI,EAAGA,EAAIwL,EAAWvL,OAAQD,GAAK,EACpCwL,EAAWxL,IACXwL,EAAWxL,GAAGoB,EAAES,8BSxWlBuJ,GAAWC,OACfI,YACJJ,EAASxR,SAAQuH,GAAKqK,EAAOhR,KAAK2G,EAAEnI,EAAI,IAAMmI,EAAEmK,KACzCE,EAAOxG,KAAK,oCAlBdyG,EAAWhN,aAINzB,YACAuI,EAAQ,eACRmG,EAAS,iBACTC,EAAW,QAElBC,KACAC,EAAanC,GAAQ,GACxBgB,SAAU,IACVC,OAAQ7B,cASAgD,EAAQjN,EAAGsC,GACfwK,EAASI,IAAIC,SAAS7K,EAAElD,QAAU,QAAQ,SAAS+N,SAAS7K,EAAEkK,SACjEI,EAAS,UACRQ,KAAM9K,EAAElD,IACRgG,IAAK9C,EACL/D,MAAOyB,ITm5BX,IAAiBvF,WS14BP4S,EAASP,GACbC,EAAGD,EAAS1N,MACf2N,EAAGD,EAAS1N,KAAKkO,gBAAgBC,SAAU,SAAUrL,MAAO,SAAUsL,OAAQ,gCTw4BhE/S,YS74Bf4S,EAASP,IT84BPpN,IAAwBjE,GAAGgH,SAAS9G,KAAKlB,8KSr4BzC4S,EAASP,yBAIYE,EAAW9B,IAAkB,IAAduC,OACfT,EAAW9B,IAAIuC,EAAc,QAMrCzN,IAAMiN,EAAQjN,EAAGsC,6CAAgByK,EAAGzK,EAAElD,+KCwEvC,OAAVyC,QAGe,QAAVA,kHAoB4CA,WViiDvD,IAA0BK,qCAAAA,kBACbA,EAAMpF,wHU1jDnBQ,uCAuBAA,gUAdmCuE,KAASwG,OACtBxG,KAAS5F,MAAMyR,2CAG7B7L,oFAJkD,kLADzDvE,SACCJ,cAAmDA,cACxCA,uBAEZI,yCAHkCuE,KAASwG,0BACtBxG,KAAS5F,MAAMyR,kXALpCpQ,SAA4DA,kBAC5DA,2BAAkBuE,wSAJlBvE,SAAoDA,kBACpDA,2BAAkBuE,wGAagBA,KAAKwG,4FACgC,uKVgRxE,IAAyB5N,EUjRvB6C,gBAA+CA,kBAC/CA,kBAA0EA,+CVgRnD7C,OACd,SAAU8D,GAGb,OAFAA,EAAMoP,iBAEClT,EAAG4F,KAAKwE,KAAMtG,iCUrRMsD,KAAKwG,kNAFtC/K,kEAhBGuE,MAAQA,m4CATbvE,SAEAJ,cAGAA,oCAkCAA,sBA9BK2E,MAAQA,kEV07BTG,EAAS,CACL4L,EAAG,EACH9Q,EAAG,GACH8E,EAAGI,2BAIFA,EAAO4L,GACR/S,EAAQmH,EAAOlF,GAEnBkF,EAASA,EAAOJ,uEUxjCb8E,GAAQ,IACRmG,GAAS,IACT9B,GAAQ,YACR8C,GAAO,mCAGTC,EAGA3P,EAGA2O,EACAiB,EACAvB,EAAS,SACTwB,KACAC,cAYKC,IACR/P,EAAKpD,SAAQuH,IACRwK,GAAYxK,EAAElD,KAAO0N,EAAS1N,IACjCkD,EAAEkK,OAAS,WACDuB,GAAQzL,EAAElD,KAAO2O,EAAK3O,IAChCkD,EAAEkK,OAAS,OACDwB,EAAMb,SAAS7K,EAAElD,KAC3BkD,EAAEkK,OAAS,QACDyB,EAAMd,SAAS7K,EAAElD,KAC3BkD,EAAEkK,OAAS,QACDlK,EAAElD,KAAOyO,GACnBvL,EAAEkK,OAAS,OACS,UAAVA,GAAsBM,EAASI,IAAIC,SAAS7K,EAAElD,KACxDkD,EAAEkK,OAAS,WAEXlK,EAAEkK,OAAS,eAKL2B,EAAMC,MACH,UAANA,GAAkBL,EAAK9R,OAAS6Q,EAAS7Q,OAAiB,SAANmS,GAAiBL,EAAK9R,OAAS6Q,EAAS7Q,MAChG+R,EAAMrS,KAAKoS,EAAK3O,KACZ2O,EAAK3O,KAAOyO,OACfrB,EAAS,YAETA,EAAS,cACTM,EAAWiB,SAGZE,EAAMtS,KAAKoS,EAAK3O,SACZiP,EAAWlQ,EAAK0E,QAAOP,GAAKwK,EAASI,IAAIC,SAAS7K,EAAElD,OACxDiP,EAAWA,EAASxL,QAAOP,IAAM2L,EAAMd,SAAS7K,EAAElD,OAAS4O,EAAMb,SAAS7K,EAAElD,OACvEiP,EAAS,OAGb7B,EAAS,cAFTA,EAAS,YAKXuB,EAAO,MACPG,QACA/P,MAAWA,IAcZmQ,MC1FqB,oDD2FpBrL,MAAKsL,GAAOA,EAAIC,SAChBvL,MAAKuL,QACDC,EE1FC,SAAwBC,EAAShI,EAAOmG,GAE9C,IAAI8B,EAASD,EAAQC,OAGjBF,EAAQ,GACRG,EAAY,EAEhBjU,OAAO2K,KAAKoJ,EAAQD,OAAO1T,SAAQ,SAAUqE,GAC5CsP,EAAQD,MAAMrP,GAAKA,IAAMA,EACzBqP,EAAM9S,KAAK+S,EAAQD,MAAMrP,OAI1B,IAAIyP,EAAOtJ,EAAIkJ,GAAO,SAAUnM,GAAK,OAAQA,EAAEwM,KAC9CC,EAAOpJ,EAAI8I,GAAO,SAAUnM,GAAK,OAAQA,EAAEwM,KAC3CE,EAAOzJ,EAAIkJ,GAAO,SAAUnM,GAAK,OAAQA,EAAEsL,KAC3CqB,EAAOtJ,EAAI8I,GAAO,SAAUnM,GAAK,OAAQA,EAAEsL,KAExCsB,EAAOL,EAAOE,EAAO,EACxBI,EAAOH,EAAOC,EAAO,EAYlBG,GARHR,EAAYjJ,EADE,UAAXgJ,GAAiC,WAAXA,EACT,CAAC,IAAYO,EAAO,IAAOG,KAAKC,KAAK,IACpDzC,GAA2B,KAAhBsC,EAAO,EAAI,KAEP,CAAC,IAAaA,EAAO,IAAOE,KAAKC,KAAK,IACrD5I,GAA0B,KAAhBwI,EAAO,EAAI,OAIIG,KAAKC,KAAK,GAGjC/C,EA0EL,SAAsBoC,EAAQS,EAAUR,GACvC,IAAIrC,EAAW,GAEf,OAAQoC,GACP,IAAK,QACL,IAAK,SAEJpC,EAAS5Q,KAAK,CAACxB,EAAG,EAAGsS,EAAI,EAAImC,IAC7BrC,EAAS5Q,KAAK,CAACxB,EAAI,EAAe,GAAXiV,EAAiB3C,EAAI,EAAI,GAAMmC,IACtDrC,EAAS5Q,KAAK,CAACxB,EAAI,EAAe,GAAXiV,EAAiB3C,EAAI,EAAI,GAAMmC,IACtDrC,EAAS5Q,KAAK,CAACxB,EAAG,EAAGsS,EAAI,EAAImC,IAC7BrC,EAAS5Q,KAAK,CAACxB,EAAI,EAAe,GAAXiV,EAAiB3C,EAAI,EAAI,GAAMmC,IACtDrC,EAAS5Q,KAAK,CAACxB,EAAI,EAAe,GAAXiV,EAAiB3C,EAAI,EAAI,GAAMmC,IACtD,MAED,IAAK,QACL,IAAK,SAEJrC,EAAS5Q,KAAK,CAACxB,EAAI,EAAIyU,EAAYnC,EAAG,IACtCF,EAAS5Q,KAAK,CAACxB,EAAI,EAAI,GAAMyU,EAAYnC,EAAI,EAAe,GAAX2C,IACjD7C,EAAS5Q,KAAK,CAACxB,EAAI,EAAI,GAAMyU,EAAYnC,EAAI,EAAe,GAAX2C,IACjD7C,EAAS5Q,KAAK,CAACxB,EAAI,EAAIyU,EAAYnC,EAAG,IACtCF,EAAS5Q,KAAK,CAACxB,EAAI,EAAI,GAAMyU,EAAYnC,EAAI,EAAe,GAAX2C,IACjD7C,EAAS5Q,KAAK,CAACxB,EAAI,EAAI,GAAMyU,EAAYnC,EAAI,EAAe,GAAX2C,IAInD,OAAO7C,EArGQgD,CAAYZ,EAAQS,EAAUR,GACzCjC,EAwGL,SAAoBJ,GACnB,IAAII,EAAS,GAEb,OADAJ,EAASxR,SAAQ,SAAUyU,GAAK7C,GAAU6C,EAAErV,EAAI,IAAMqV,EAAE/C,EAAI,OACrDE,EAAO8C,UAAU,EAAG9C,EAAOxL,OAAS,GA3G9BuO,CAAUnD,GAiBvB,OAdAkC,EAAM1T,SAAQ,SAAU4U,GAEvBA,EAAIC,GAAKD,EAAIb,EAAIC,EACjBY,EAAIE,GAAKb,EAAOW,EAAI/B,EAGpB+B,EAAIxV,EAYN,SAAewV,EAAKhB,EAAQS,EAAUR,GACrC,IAAIzU,EAAI,EACP2V,EAAU,EAEX,OAAQnB,GACP,IAAK,QACJmB,EAAWH,EAAIE,GAAK,GAAM,EAAKT,EAAYA,EAAW,EACtDjV,EAAKwV,EAAIC,GAAKR,EAAYU,EAC1B,MAED,IAAK,SACJA,EAAWH,EAAIE,GAAK,GAAM,EAAKT,EAAYA,EAAW,EACtDjV,EAAKwV,EAAIC,GAAKR,EAAYU,EAC1B,MAED,IAAK,QACL,IAAK,SACJ3V,EAAKwV,EAAIC,GAAKhB,EAAY,IAAOA,EAInC,OAAOzU,EAjCE4V,CAAKJ,EAAKhB,EAAQS,EAAUR,GACpCe,EAAIlD,EAoCN,SAAekD,EAAKhB,EAAQS,EAAUR,GACrC,IAAInC,EAAI,EACPuD,EAAU,EAEX,OAAQrB,GACP,IAAK,QACL,IAAK,SACJlC,EAAKkD,EAAIE,GAAKjB,EAAY,IAAOA,EACjC,MAED,IAAK,QACJoB,EAAWL,EAAIC,GAAK,GAAM,EAAKR,EAAYA,EAAW,EACtD3C,EAAKkD,EAAIE,GAAKT,EAAYY,EAC1B,MAED,IAAK,SACJA,EAAWL,EAAIC,GAAK,GAAM,EAAKR,EAAYA,EAAW,EACtD3C,EAAKkD,EAAIE,GAAKT,EAAYY,EAI5B,OAAOvD,EAzDEwD,CAAKN,EAAKhB,EAAQS,EAAUR,GAGpCe,EAAIpD,SAAWA,EACfoD,EAAIhD,OAASA,KAGP8B,EFqCMyB,CAAc1B,EAAM9H,GAAOmG,IACvC4B,EAAQA,EAAM5L,QAAOP,IAAM,IAAI,IAAK,KAAK6K,SAAS7K,EAAElD,IAAIgB,MAAM,EAAE,MG5F3D+P,eAAuBC,GAC5B,IAAIC,QAAiB/B,MAAM8B,GACvBE,QAAeD,EAASnS,OAE5B,aADgBsL,GAAS8G,EAAQ7G,IH2FjC8G,CC/FqB,+BDgGpBtN,MAAKsH,QACDiG,KACJjG,EAAIxP,SAAQuH,GAAKkO,EAAIlO,EAAE8K,MAAQ9K,EAAErG,QAEjCwS,EAAM1T,SAAQuH,IACbA,EAAErG,MAAQuU,EAAIlO,EAAElD,KAChBkD,EAAE4K,IAAMA,GAAI5K,EAAElD,YAEfjB,EAAOsQ,OACP3B,EAAW3O,EAAKsS,MAAKnO,GAAKA,EAAElD,KAAO2L,MACnCiD,EAAMrS,KAAKoP,IACXmD,QACA/P,MAAWA,oCApFK6B,GACH,UAAVwM,QACHuB,EAAO/N,EAAEF,OAAOsF,SAChBoH,EAAS,YACTsB,EAAWR,gBAAgBC,SAAU,WACrCW,QACA/P,MAAWA,mBAiDZ6P,KACAC,SACAF,EAAO,UACPjB,EAAW3O,EAAKsS,MAAKnO,GAAKA,EAAElD,KAAO2L,MACnCiD,EAAMrS,KAAKoP,QACXyB,EAAS,UACT0B,QACA/P,MAAWA,SAuDagQ,EAAM,cAAmFA,EAAM,iDAjBxFL,uBI3HvB,kEAAQ,CACjB3Q,OAAQW,SAAS4S"}